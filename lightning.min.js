class Vector{constructor(t,s){t instanceof Vector?(this.x=t.x,this.y=t.y):(this.x=t||0,this.y=s||0)}distanceTo(t){return Math.sqrt((t.x-this.x)**2+(t.y-this.y)**2)}angle(t){return Math.atan2(t.y-this.y,t.x-this.x)}clone(){return new Vector(this.x,this.y)}}class Lightning{constructor(t,s,e={}){this.dx=s.x-t.x,this.dy=s.y-t.y,this.start=new Vector(t),this.end=new Vector(s),this.points=[],this.thickness=e.thickness||4,this.times=0,this.angle=this.start.angle(this.end),this.opacity=1,this.lastTime=performance.now(),this.fadeTime=e.fadeTime||1/0,this.fadeTimeout=e.fadeTime!=1/0&&"number"==typeof e.fadeTime&&"function"==typeof e.onDone?setTimeout(e.onDone,e.fadeTime):0,this.range=50,this.stepLength=e.stepLength||4,this.changeRate=e.changeRate||4,this.newGen()}newGen(){const t=this.range,s=this.start.distanceTo(this.end),e=this.stepLength,i=this.changeRate;let h=new Vector;for(let n=0;n<Math.abs(s)/e;n++){h.x+=Math.random()*i*2-i;const a=t-Math.abs((Math.abs(s)/e/2-n)/(Math.abs(s)/e/2)*t);h.x<-a?h.x=-a:h.x>a&&(h.x=a),h.y+=e,this.points.push(h.clone())}this.points.push(new Vector(0,s))}update(t){const s=performance.now()-this.lastTime;this.draw(t,Math.max(1-s/this.fadeTime,0))}draw(t,s=1){t.save(),t.translate(this.start.x,this.start.y),t.rotate(this.angle-Math.PI/2),t.strokeStyle="rgba(255, 255, 255, "+s.toString()+")",t.lineWidth=this.thickness,t.shadowBlur=50,t.shadowColor="#ffffff",t.beginPath(),t.moveTo(this.points[0].x,this.points[0].y);for(let s of this.points)t.lineTo(s.x,s.y);return t.stroke(),t.restore(),this}}window.Lightning=Lightning;
